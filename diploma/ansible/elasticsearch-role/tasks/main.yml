---
# tasks file for elasticsearch-role

- name: Download and install elasticsearch from .deb package  (source - yandex mirror)
  apt:
    deb: https://mirror.yandex.ru/mirrors/elastic/8/pool/main/e/elasticsearch/elasticsearch-8.10.3-amd64.deb
  register: installation_result

- name: Print the generated password for the elastic built-in superuser (out of the installation output)
  debug:
    var: installation_result.stdout_lines | select("search", "generated password")

- name: Check if certificate folder elastic-mycert already exists
  stat:
    path: /etc/elasticsearch/certs/elastic-mycert.d/elastic-mycert.crt
  register: cert_check  

- name: Create certificates and place them as per configuration file elasticsearch.yml
  block:

    - name: Create /tmp/make-certs.sh locally
      become: false
      template:
        src: make-certs.sh.j2
        dest: /tmp/make-certs.sh
      delegate_to: localhost

    - name: Run make-certs.sh on the elasticsearch-server
      script: /tmp/make-certs.sh 
      args:
        executable: bash

  when: not cert_check.stat.exists

- name: Pick up certificates for kibana-role from elasticsearch-server to local machine
  fetch:
    src: "{{ item }}"
    dest: ~/ansible/kibana-role/files/
    flat: yes
  loop:
    - "/tmp/kibana-mycert.d.zip"
    - "/etc/elasticsearch/certs/ca.d/ca.crt"

- name: Task to return fail if kibana service token already exists
  replace:
    path: /etc/elasticsearch/service_tokens 
    regexp: ^elastic/kibana/kibana_token.*
    replace: "lorem ipsum"  
  check_mode: true
  register: token_presence
  failed_when: token_presence.changed
  ignore_errors: true

#- name: Print var token_presence
#  debug:
#    var: token_presence

- name: Create elasticsearch.serviceAccountToken for kibana and extract kibanaToken variable out of the token_creation_output
  block:

    - name: Create elasticsearch.serviceAccountToken for kibana
      shell: sudo /usr/share/elasticsearch/bin/elasticsearch-service-tokens create elastic/kibana kibana_token
      no_log: true
      register: token_creation_output
      notify: Restart elasticsearch handler

    - name: Extract kibanaToken variable out of the token_creation_output
      set_fact:
        kibanaToken: "{{ token_creation_output.stdout_lines[0] | regex_replace('.*= (.*)', '\\1') }}"
      no_log: true

#    - name: Print kibanaToken
#      debug:
#        msg: "{{ kibanaToken }}"

  when: not token_presence.changed 

- name: Change file permissions for /etc/elasticsearch/service_tokens
  file:
    path: /etc/elasticsearch/service_tokens
    mode: g+r

- name: Configure elasticsearch (Make elasticsearch.yml and place it in /etc/elasticsearch/)
  template:
    src: elasticsearch.yml.j2
    dest: /etc/elasticsearch/elasticsearch.yml
  notify: Restart elasticsearch handler

- name: Start elasticsearch service
  service:
    name: elasticsearch
    state: started
    enabled: yes
